openapi: 3.0.0
info:
  title: youStream Users
  version: 1.0.0
paths:
  /api/v1/users/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                avatar:
                  type: string
                  format: binary
                coverImage:
                  type: string
                  format: binary
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                sample:
                  value:
                    _id: "64b..."
                    userName: "johndoe"
                    email: "john@example.com"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/v1/users/login:
    post:
      summary: Login user and return JWT
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
              examples:
                sample:
                  value:
                    accessToken: "eyJhbGci..."
                    refreshToken: "rfrsh..."
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/v1/users/logout:
    post:
      summary: Logout the current user
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logged out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/v1/users/refresh-token:
    post:
      summary: Refresh access token
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Token refreshed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/v1/users/change-password:
    post:
      summary: Change password for authenticated user
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        "200":
          description: Password changed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/v1/users/current-user:
    get:
      summary: Get current authenticated user
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Current user info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  /api/v1/users/update-profile:
    patch:
      summary: Update user profile
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                bio:
                  type: string
      responses:
        "200":
          description: Profile updated
  /api/v1/users/update-avatar:
    patch:
      summary: Update user avatar
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: Avatar updated
  /api/v1/users/update-cover-image:
    patch:
      summary: Update user cover image
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                coverImage:
                  type: string
                  format: binary
      responses:
        "200":
          description: Cover image updated
  /api/v1/users/channel/{userName}:
    get:
      summary: Get channel details by username
      tags:
        - Users
      parameters:
        - in: path
          name: userName
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Channel details
  /api/v1/users/watch-history:
    get:
      summary: Get watch history for current user
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Watch history
